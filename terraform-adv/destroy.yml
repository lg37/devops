# Pipeline pour Destroy

trigger: none
  
pool:
  vmImage: ubuntu-latest

variables:
  azure_connection: 'VS'
  key_vault_name: 'mylgkv'
  TF_VAR_RG_NAME: 'devops-git-trigger'
  TF_VAR_VNET_NAME : 'devops-vnet'

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: AzureKeyvault@2
            displayName: 'Get secrets from KV to variables'
            inputs:
              azureSubscription: '$(azure_connection)'
              KeyVaultName: '$(key_vault_name)'
              SecretsFilter: '*'                  # 'backend-rgname','backend-saname','backend-container','backend-path'
              RunAsPreJob: false
          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-adv'
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '$(azure_connection)'
              backendAzureRmResourceGroupName: '$(backend-rgname)'
              backendAzureRmStorageAccountName: '$(backend-saname)'
              backendAzureRmContainerName: '$(backend-container)'
              backendAzureRmKey: '$(backend-path)'
          - task: TerraformTaskV3@3
            displayName: validate
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-adv'
              provider: 'azurerm'
              command: 'validate'
          
  - stage: tfdestroy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: destroy
        steps:
          - task: AzureKeyvault@2
            displayName: 'Get secrets from KV to variables'
            inputs:
              azureSubscription: '$(azure_connection)'
              KeyVaultName: '$(key_vault_name)'
              SecretsFilter: '*'                  # 'backend-rgname','backend-saname','backend-container','backend-path'
              RunAsPreJob: false
          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-adv'
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '$(azure_connection)'
              backendAzureRmResourceGroupName: '$(backend-rgname)'
              backendAzureRmStorageAccountName: '$(backend-saname)'
              backendAzureRmContainerName: '$(backend-container)'
              backendAzureRmKey: '$(backend-path)'
          - task: TerraformTaskV3@3
            displayName: destroy
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-adv'
              provider: 'azurerm'
              command: 'destroy'
              environmentServiceNameAzureRM: '$(azure_connection)'